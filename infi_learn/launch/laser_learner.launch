<launch>

<node pkg="infi_learn" type="embedding_learner.py" name="embedding" output="screen"
clear_params="true">
    <remap from="reward" to="ape/reward"/>
    <remap from="action" to="lo_interface/normalized_parameters"/>
    <remap from="breaks" to="terminator/breaks"/>
    <rosparam>
        embedding_spin_rate: 1.0
        classifier_spin_rate: 0.1
        plot_rate: 1.0
        
        sources:
            dt_tol: 0.1
            image:
                image_mode: gray
                topic: feature_image

            belief:
                topic: belief_state/stream_raw

        sars_frontend:
            action_dim: 9
            sync_time_tolerance: 0.1
            dt: 2.0
            lag: 1.0

        embedding:
            learning:
                holdout:
                    rate: 0.05
                    mode: contiguous
                    segment_length: 30

                loss:
                    separation_distance: 0.5

                batch_num_sars: 10
                batch_num_terminal: 10
                iters_per_spin: 10
                validation_period: 10

            network:
                use_batch_norm: false
                dropout_rate: 0.0
                image_subnet:
                    n_layers: 3
                    n_filters: [8, 8, 4]
                    filter_sizes: [4, 4, 4]
                    conv_strides: 1
                    pool_sizes: [4, 4, 5]
                    pool_strides: [2, 2, 3]
                vector_subnet:
                    n_layers: 3
                    n_units: [16, 16]
                    n_outputs: 16
                    final_rect: relu
                final_subnet:
                    n_layers: 3
                    n_units: [32, 16]
                    n_outputs: 2
                    final_rect: tanh

        classification:
            visualize: true
            vis_res: 30

            classifier:
                bandwidth: [1.0, 1.0]
                epsilon: 1e-3
            
            holdout:
                rate: 0.1
                mode: uniform

            optimizer:
                type: bfgs
                mode: min
                num_restarts: 2
                lower_bounds: -6
                upper_bounds: 3
    </rosparam>
</node>

</launch>